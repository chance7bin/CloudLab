# 项目相关配置
lab:
  # 名称
  name: OpenGMS-Lab
  # 版本
  version: 1.0.0
  # 版权年份
  copyrightYear: 2022
  # 文件路径 示例（ Windows配置E:/opengms-lab/uploadPath，Linux配置 /home/opengms-lab/uploadPath）
#  profile: E:/opengms-lab/uploadPath
  # 验证码类型 math 数组计算 char 字符验证
  captchaType: math

# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080(8888是jupyter默认端口)
  port: 8808

spring:
  profiles:
    active: dev
  datasource:
    name: lab_datasource
    url: jdbc:mysql://127.0.0.1:3306/opengms_lab?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&serverTimezone=Asia/Shanghai
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456
  redis:
    # Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
    database: 0
    host: localhost
    port: 6379
    # 连接密码（默认为空）
    password:
    # 连接超时时间（毫秒)
    timeout: 50ms
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-wait: -1
        # 连接池中的最大空闲连接 默认 8
        max-idle: 8
        # 连接池中的最小空闲连接 默认 0
        min-idle: 0
  # 资源信息
  messages:
    # 国际化资源文件路径
    basename: i18n/messages
    encoding: utf-8


# MyBatis配置
mybatis:
  # 搜索指定包别名
  typeAliasesPackage: org.opengms.**.entity.po
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath*:mapper/**/*Mapper.xml
  # 加载全局的配置文件
  configLocation: classpath:mybatis/mybatis-config.xml


# PageHelper分页插件
pagehelper:
  # 指定分页插件使用哪种数据库方言
  helperDialect: mysql
  # 当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。
  # reasonable: true
  # 支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，
  # 自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
  supportMethodsArguments: true
  # 增加了该参数来配置参数映射，用于从对象中根据属性名取值
  params: count=countSql

# token配置
token:
  # 令牌自定义标识
  header: Authorization
  # 令牌密钥
  secret: abcdefghijklmnopqrstuvwxyz
  # 令牌有效期（默认30分钟）
  expireTime: 30


#日志配置
#logging:
#  level:
#    org.opengms: debug
#    org.springframework: warn

# 用户配置
user:
  password:
    # 密码最大错误次数
    maxRetryCount: 5
    # 密码锁定时间（默认10分钟）
    lockTime: 10


# Swagger配置
swagger:
  # 是否开启swagger
  enabled: true
  # 请求前缀
  pathMapping: /dev-api
  

#socket配置
socket:
  host: 127.0.0.1
  port: 6001
